// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// criar uma migration: yarn prisma migrate dev
model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("user")// admin, barbeiro, recepcionista
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  business  Business? @relation(fields: [businessId], references: [id])
  businessId String?

  agendar Agendar[]

  @@map("users")
}

model Business {
  id        String   @id @default(uuid())
  name      String
  address   String
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users     User[]
  services  Service[]
  agendar Agendar[]

  @@map("businesses")
}

model Service {
  id         String   @id @default(uuid())
  name       String
  price      Float
  duration   Int // minutos
  image        String?   // <-- novo campo (opcional)
  createdAt  DateTime @default(now())
  business   Business @relation(fields: [businessId], references: [id])
  businessId String
  agendamentos Agendar[]

  @@map("services")
}

model Agendar {
  id         String   @id @default(uuid())
  date       DateTime
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  service    Service  @relation(fields: [serviceId], references: [id])
  serviceId  String
  business   Business @relation(fields: [businessId], references: [id])
  businessId String

  @@map("agendar")
}